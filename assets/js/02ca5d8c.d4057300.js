"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1179],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,k=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8409:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),i=(n(7294),n(4137));const r={},o=void 0,s={unversionedId:"api-security/Risks",id:"api-security/Risks",title:"Risks",description:"Risks",source:"@site/docs/api-security/5-Risks.md",sourceDirName:"api-security",slug:"/api-security/Risks",permalink:"/apistds-docusaurus/docs/next/api-security/Risks",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Definitions",permalink:"/apistds-docusaurus/docs/next/api-security/Definitions"},next:{title:"SecurityReference Architecture",permalink:"/apistds-docusaurus/docs/next/api-security/SecurityReference Architecture"}},l={},c=[{value:"Risks",id:"risks",level:2},{value:"Mitigation Approach",id:"mitigation-approach",level:3},{value:"Zero Trust and Decoupled Environments",id:"zero-trust-and-decoupled-environments",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"risks"},"Risks"),(0,i.kt)("p",null,"[APIs are another channel into an organisation's resources and\ninformation. Most organisations are accustomed to exposing a web\ninterface, with good control over what information is released via that\ninterface. APIs offer direct, machine to machine access to resources and\ninformation, which makes it less obvious when information is incorrectly\nexposed. It becomes increasingly important for internal business\nstakeholders to decide what information and resources should be released\nvia this channel, and to whom.]","{.mark}"),(0,i.kt)("p",null,"[The security risks that APIs introduce will be similar to the\ntraditional risks experienced on any web channel (web sites and web\napplications), except there is:]","{.mark}"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Increased attack surface due to more ways in, multiple services to\npotentially exploit\xa0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Risk of inadvertently exposing\xa0back-end data, back-end architecture\nand back-end applications")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Potential for greater consequences if your API is\ncompromised/hijacked and serves up malicious payloads to consumers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Greater privacy concerns where APIs involve personally identifiable\ninformation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Risks of malware in uploaded files due to performance overhead or\nlack on inline scanning")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Risk of malformed APIs that are developed with limited security\nvalidation and inappropriate security validation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Risk related to cloud and container-based systems where security\nbest practices are not applied."))),(0,i.kt)("p",null,"Risks posed by APIs include loss of integrity, confidentiality and\navailability of data, for example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Loopholes retrieving API resources may offer access to more\ninformation than was intended (especially if fields requested are\nbuilt straight into a DB query)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Write operations offer a means of polluting data stores, feeding\nmisinformation into a system")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Write operations could be used to form a Denial of Service attack by\noverloading the server or data store")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Use of wildcards in search fields can shut down APIs and back-end\napplications")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Cross site scripting attacks made possible by consuming applications\nnot checking user inputs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"SQL injection into consuming applications which cause database\ndamage at the API backend")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Parameter attacks such as HTTP Parameter Pollution (HPP)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Man-in-the-middle attacks, modifying API requests or responses\nleading to data eavesdropping or misinformation insertion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Subverting authentication or authorisation mechanisms to spoof\nmessages from legitimate consumers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Credential leakage or stealing authentication tokens to obtain\ninformation illicitly")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"System information leakage through API error messages revealing\ndetails about an API's construction or underlying system makeup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Broken Session IDs, Keys and authentication create exposure to\nunauthorized access through authentication factors that are not\nfunctioning because of poor security design or technology bugs.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Other broken resource identifiers, authentication and authorisation\nmechanisms, allowing attackers to exploit flaws to obtain access,\neither temporarily or permanently.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Exposing too much information through the use of generic resource\nAPIs rather than specialising APIs for each specific circumstance"))),(0,i.kt)("h3",{id:"mitigation-approach"},"Mitigation Approach"),(0,i.kt)("p",null,"API risks need to be mitigated in a number of ways. There is no single\noff-the-shelf security solution which can be dropped in to address all\naspects of API security. APIs need to be secure by design; security\nneeds to be built in from scratch and be considered within the context\nof existing protection mechanisms."),(0,i.kt)("p",null,"The main areas that API Security covers are:"),(0,i.kt)("p",null,"a.  Identity and Access Management (IdAM) to provide the following\nservices:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"-   Authentication\n\n-   Authorisation and delegated authority\n\n-   Federation\n")),(0,i.kt)("p",null,"b.  Confidentiality"),(0,i.kt)("p",null,"c.  Integrity"),(0,i.kt)("p",null,"d.  Availability and Threat Protection"),(0,i.kt)("p",null,"e.  Logging, Alerting and Incident Management"),(0,i.kt)("p",null,"This ensures that:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The consuming application is known and can only get access to API\nresources they are allowed to")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Message content has not been tampered with between consumer and\nprovider")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Resources are reliably from the provider intended when the consuming\napplication made the request")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The API will be available when needed, and not brought down by\nattacks from malicious consuming applications"))),(0,i.kt)("p",null,"In order to address API security risks, a security framework is needed\nwhich encapsulates all the aspects of security listed above."),(0,i.kt)("h3",{id:"zero-trust-and-decoupled-environments"},"Zero Trust and Decoupled Environments"),(0,i.kt)("p",null,"A Zero Trust Network Access model has been talked about for a number of\nyears. In the current environment it is now seen by many analysts as the\ndirection organisations need to take. This section highlights areas of\nthe model that can help mitigate risks related to APIs."),(0,i.kt)("p",null,"Zero Trust Architecture",(0,i.kt)("sup",{parentName:"p",id:"fnref-2"},(0,i.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2")),' removed the concept of trusted internal and\nuntrusted external networks and focuses on the policy of "never trust\nalways verify".'),(0,i.kt)("p",null,"The selection of cloud services has changed this security model to one\nwhere all actors (employees, partners etc) require access controls no\nmatter where they are coming from or on."),(0,i.kt)("p",null,"Zero Trust is seen as an architecture that is critical for organisations\nmoving towards decoupled microservices and API architectures."),(0,i.kt)("p",null,"Microservices architectures are the backbone of many API services\noffered by organisations and have embraced the concepts of identity and\nhow permissions are created and enforced between different services."),(0,i.kt)("p",null,"Every microservice requires an identity which can be confirmed, and the\nrequired permissions and policies applied which should be based on\nattributes and contextual access."),(0,i.kt)("p",null,"The following are some of the areas that need to be considered by an\norganisation when planning their implementation of Zero Trust:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Apply Strong Identification and Authentication")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Build a digital trust model that is dynamic, and trust is only valid\nfor the current session")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Constant evaluation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Always authenticate")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Apply contextual authorisation (Attributes, Consent, Location, Time,\nbehaviour etc)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Build in a Digital Risk capability that maps to a level of\nconfidence and constantly re-evaluates")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Leverage IAM capability from Identity proofing to Adaptive\nAuthentication")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Incorporate Endpoint security")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Transaction Level verification and Continuous session validation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ensure Data Security is applied with reference to Encryption and\nUser privacy controls including consent management")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Implement strong Auditing, Logging, Event reporting and Forensics\nproviding insight and behavioural patterns")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Smart Threat detection with Machine Learning")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Inject Identity context into the API traffic (User, Application,\nDevice etc)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Use JWT to provide secure and validated claims, which can also be\nencrypted")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Apply Fine grained access at the egress point, allowing the\nEnforcement point to allow, block filter or modify the response")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Identity Propagation to backend services to make decisions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"JWTs limit chatter in microservice environments")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"All APIs should be secured and treated as if they are public APIs."))))}d.isMDXComponent=!0}}]);