"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4171],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,k=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2265:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7462),o=(n(7294),n(4137));const r={},i=void 0,s={unversionedId:"api-design-development/BatchHandling & Transactions",id:"version-1.3.0/api-design-development/BatchHandling & Transactions",title:"BatchHandling & Transactions",description:"Batch Handling & Transactions",source:"@site/versioned_docs/version-1.3.0/api-design-development/9-BatchHandling & Transactions.md",sourceDirName:"api-design-development",slug:"/api-design-development/BatchHandling & Transactions",permalink:"/apistds-docusaurus/docs/api-design-development/BatchHandling & Transactions",draft:!1,tags:[],version:"1.3.0",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Considerationof state",permalink:"/apistds-docusaurus/docs/api-design-development/Considerationof state"},next:{title:"APIVersion Control",permalink:"/apistds-docusaurus/docs/api-design-development/APIVersion Control"}},l={},p=[{value:"Batch Handling &amp; Transactions",id:"batch-handling--transactions",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"batch-handling--transactions"},"Batch Handling & Transactions"),(0,o.kt)("p",null,"APIs are not designed for large payloads i.e. batch handling for\nretrieving or uploading batches of data. APIs are geared towards\nstateless, usually synchronous, web-like requests for individual\ndiscrete data transactions. However, batch handling can be achieved\nthrough bundling multiple calls to the same API. This helps achieve\natomicity of transactions and aids recoverability in event of\nerrors.",(0,o.kt)("sup",{parentName:"p",id:"fnref-4"},(0,o.kt)("a",{parentName:"sup",href:"#fn-4",className:"footnote-ref"},"4"))),(0,o.kt)("p",null,"When handling transactions, it is important to consider the\ntroubleshooting and recovery aspects of error handling. This includes\nvisibility of transaction progress and the ability to perform root cause\nanalysis. To achieve this, it is advisable that logging is performed on\nall transactions coming through an API, with accurate timestamping, so\nthat monitoring tools can visualise transaction progress. It also\nrequires transaction identifiers (See ",(0,o.kt)("a",{parentName:"p",href:"#request-headers"},"[section 2.6.1,]{.underline}\n[Request Headers]{.underline}"),") to be built into\ntransactional API calls to ensure the transaction is traceable\nend-to-end."),(0,o.kt)("p",null,"In some cases, it may be deemed appropriate to provide an asynchronous\nbatch type capability using an API. This would usually be implemented in\na scenario where legacy system impact is a concern. An example of this\ncould be a bulk creation of person records in a database based on a\nbatch event in a consuming legacy application. In such a scenario it\nwould be preferable for the consuming application to treat each person\nas a unique event and to POST to a person API for each new unique\nresource. Whilst this may seem like an unnecessary overhead, by\nindividualising the transactions each success or error scenario can be\nhandled in its own right, and the consumer can be informed of their\ntransaction status. If this is not possible, due to some system\nrestriction, it is possible to asynchronously POST multiple person\ndetails to an API. This type of interaction should not be attempted\nsynchronously as large batches will tie up HTTP threads and in some\ncases require client/server timeout control."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example Request")),(0,o.kt)("p",null,"The following is an example of a singleton create person request:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"{"),(0,o.kt)("p",{parentName:"blockquote"},'\\"names\\": {'),(0,o.kt)("p",{parentName:"blockquote"},'\\"firstName\\": \\"John\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"middleName\\": \\"Howard\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"lastName\\": \\"Doe\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"salutation\\": \\"Mr John Doe\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"title\\": \\"Mr\\"'),(0,o.kt)("p",{parentName:"blockquote"},"}"),(0,o.kt)("p",{parentName:"blockquote"},"}")),(0,o.kt)("p",null,"This is an example of a bulk person create API call:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"#POST a collection of person resources"),(0,o.kt)("p",{parentName:"blockquote"},"POST\xa0",(0,o.kt)("a",{parentName:"p",href:"https://api.example.govt.nz/people"},"https://api.example.govt.nz/people")),(0,o.kt)("p",{parentName:"blockquote"},"Accept: application/json,version=1.","*"),(0,o.kt)("p",{parentName:"blockquote"},"{"),(0,o.kt)("p",{parentName:"blockquote"},'\\"people\\": ',"["),(0,o.kt)("p",{parentName:"blockquote"},"{"),(0,o.kt)("p",{parentName:"blockquote"},'\\"names\\": {'),(0,o.kt)("p",{parentName:"blockquote"},'\\"firstName\\": \\"John\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"middleName\\": \\"Howard\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"lastName\\": \\"Doe\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"salutation\\": \\"Mr John Doe\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"title\\": \\"Mr\\"'),(0,o.kt)("p",{parentName:"blockquote"},"}"),(0,o.kt)("p",{parentName:"blockquote"},"},"),(0,o.kt)("p",{parentName:"blockquote"},"{"),(0,o.kt)("p",{parentName:"blockquote"},'\\"names\\": {'),(0,o.kt)("p",{parentName:"blockquote"},'\\"firstName\\": \\"Mary\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"middleName\\": \\"Pauline\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"lastName\\": \\"Smith\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"salutation\\": \\"Ms Mary Smith\\",'),(0,o.kt)("p",{parentName:"blockquote"},'\\"title\\": \\"Ms\\"'),(0,o.kt)("p",{parentName:"blockquote"},"}"),(0,o.kt)("p",{parentName:"blockquote"},"},"),(0,o.kt)("p",{parentName:"blockquote"},"{"),(0,o.kt)("p",{parentName:"blockquote"},'\\"',".","....lots more people here",".",'....\\": \\"',".",'..\\"'),(0,o.kt)("p",{parentName:"blockquote"},"}"),(0,o.kt)("p",{parentName:"blockquote"},"]"),(0,o.kt)("p",{parentName:"blockquote"},"}")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example Response")),(0,o.kt)("p",null,"Note that the API is unable to respond with headers such as Location as\nthis request should be treated as asynchronous."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"200 OK")))}m.isMDXComponent=!0}}]);