"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7317],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1619:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(4137));const i={},o=void 0,s={unversionedId:"api-security/BuildingSecure APIs",id:"version-1.4.0/api-security/BuildingSecure APIs",title:"BuildingSecure APIs",description:"Building Secure APIs",source:"@site/versioned_docs/version-1.4.0/api-security/7-BuildingSecure APIs.md",sourceDirName:"api-security",slug:"/api-security/BuildingSecure APIs",permalink:"/apistds-docusaurus/docs/api-security/BuildingSecure APIs",draft:!1,tags:[],version:"1.4.0",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SecurityReference Architecture",permalink:"/apistds-docusaurus/docs/api-security/SecurityReference Architecture"},next:{title:"Pattern1 Internal Use only",permalink:"/apistds-docusaurus/docs/api-security/Pattern1 Internal Use only"}},l={},p=[{value:"Building Secure APIs",id:"building-secure-apis",level:2},{value:"API Security Design Principles",id:"api-security-design-principles",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"building-secure-apis"},"Building Secure APIs"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Building in security starts from the ground up, so development of APIs\nneeds to be done with awareness of the API security risks associated\nwith the resources and information being exposed, and with appropriate\nmitigations in place for these API security risks."),(0,r.kt)("p",{parentName:"blockquote"},"When developing an API is it advisable to carefully consider potential\nmalicious use, especially:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"PUTs and POSTs -- which change internal data and could be used to\nattack or misinform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"DELETEs -- which could be used to remove the contents of an internal\nresource repository"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Standard secure coding practices are always recommended (see ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.owasp.org/index.php/Security_by_Design_Principles"},"[OWASP\nSecurity by Design\nPrinciples]{.underline}"),"),\nin line with New Zealand Information Security Manual (NZISM) guidance.\nBut API development should take special note of the following:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Design Driven Development (refer to Part C)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://owasp.org/www-project-top-ten/"},"[OWASP Top\nTen]{.underline}")," -- A\nsummary of the standard attacks and mitigations")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html"},"[REST Security Cheat\nSheet]{.underline}"),"\n-- REST-specific risks and how to prevent them, e.g. input\nvalidation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://owasp.org/www-project-api-security/"},"[OWASP API Security\nProject]{.underline}"),"\n-- Top 10 API-specific risks and how to prevent them"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The ",(0,r.kt)("a",{parentName:"p",href:"https://cheatsheetseries.owasp.org/index.html"},"[OWASP Cheat Sheet\nSeries]{.underline}"),"\nprovides cheat sheets on a variety of security-related subjects. It is\nworth reviewing them to see if others may apply to your specific\ncircumstances. Special note should be taken of the following where\nyour API accepts input values as parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"},"[OWASP Input Validation Cheat\nSheet]{.underline}"),"\n-- A summary of input risks and mitigations")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"},"[OWASP Cross Site Scripting Prevention Cheat\nSheet]{.underline}"),"\n-- how to escape inputs to prevent cross site scripting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html"},"[OWASP SQL Injection Prevention Cheat\nSheet]{.underline}"),"\n-- ensuring database queries are built internally")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://cheatsheetseries.owasp.org/cheatsheets/Query_Parameterization_Cheat_Sheet.html"},"[OWASP Query Parameterization Cheat\nSheet]{.underline}"),"\n-- examples of SQL injection and stored procedure vulnerabilities"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"It is also recommended that a security testing capability be\nincorporated into the development cycle which provides continuous,\nrepeatable and automated tests to find security vulnerabilities in\nAPIs and web applications during development and testing.")),(0,r.kt)("h3",{id:"api-security-design-principles"},"API Security Design Principles"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The following are key principles that should be applied when designing\nAPI security frameworks:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Design with the objective that the API will eventually be accessible\nfrom the public internet, even if there are no plans to do so at the\nmoment")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Security first -- build security into the API when they are being\ndeveloped")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a common authentication and authorisation pattern, preferably\nbased on existing security components: avoid creating a bespoke\nsolution for each API")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Least Privilege - Access and authorisation should be assigned to API\nconsumers based on the minimal amount of access they need to carry\nout the functions required, and strong authentication and\nauthorization models are applied")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Maximise entropy (randomness) of security credentials by using API\nKeys rather than username and passwords for API authorisation, as\nAPI Keys provide an attack surface that is more challenging for\npotential attackers")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Balance performance with security with reference to key life times\nand encryption / decryption overheads")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Manage the exposure and lifetime of all APIs, and ensure all\norganisation APIs are covered by proactive scanning")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Validate the content of all incoming messages, ensuring\ncommunications are secured (i.e. encrypted) and apply threat\nprotection policies (e.g. Injection and throttling)."))),(0,r.kt)("h1",{id:"usage-patterns"},"Usage Patterns"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Different API usage patterns require different authentication and\nauthorisation models, below is a short definition of each of the\ndifferent usage patterns."),(0,r.kt)("p",{parentName:"blockquote"},'Note: The Security components defined in the following diagrams are\nlocated, for simplicity, in the "trusted" zone i.e. an area managed by\nan agency. It is possible that these components could reside in\ndifferent zones which relate to varying levels of trust (e.g. a DMZ).')))}d.isMDXComponent=!0}}]);